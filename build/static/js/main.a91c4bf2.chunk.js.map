{"version":3,"sources":["components/Toolbar/Toolbar.module.css","components/Search/Search.module.css","components/Item/Item.module.css","components/Layout/Layout.module.css","components/CompileItem/CompileItem.module.css","components/List/List.module.css","components/Editor/Editor.module.css","containers/App.module.css","serviceWorker.js","actions/loadStateFromLocalStorage.js","actions/createRecord.js","actions/editRecord.js","actions/editCompileItem.js","actions/changeCurrentRecord.js","actions/saveToLocalStorage.js","actions/deleteItem.js","actions/searchItem.js","reducers/diary.js","reducers/index.js","components/Search/Search.js","components/Toolbar/Toolbar.js","components/Item/Item.js","components/List/List.js","components/Editor/Editor.js","components/CompileItem/CompileItem.js","components/Layout/Layout.js","containers/App.js","index.js"],"names":["module","exports","Toolbar","Button","ButtonInner","Form","Input","Clear","Submit","InputWrapper","Item","ItemActive","Layout","List","Content","CompileItem","Date","Title","Editor","App","Boolean","window","location","hostname","match","LOAD_FROM_STORAGE","CREATE_RECORD","EDIT_RECORD","EDIT_COMPILE_ITEM","CHANGE_CURRENT_RECORD","SAVE_TO_LOCAL_STORAGE","DELETE_ITEM","SEARCH_ITEM","APP_NAME","INITIAL_STATE","records","editItem","searchItem","AppReducer","combineReducers","diary","state","arguments","length","undefined","action","type","fromStorage","JSON","parse","localStorage","getItem","Object","objectSpread","setItem","stringify","currentRecord","record","newRecord","id","uuid","name","content","createdAt","changeAt","compileItem","date","toLocaleDateString","getHours","getMinutes","concat","toConsumableArray","_records","recordId","editRecord","find","_ref","assign","deletedIndex","findIndex","_ref2","splice","value","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","searchValue","target","handleClear","handleSearchItemChange","handleSubmit","preventDefault","react_default","a","createElement","className","classes","onSubmit","onClick","placeholder","onChange","Component","handleCreateRecord","react","handleEditCompileItem","handleDeleteItem","canEditButtonGroup","components_Search_Search","_props$record","classItem","handleChangeCurrentRecord","onDoubleClick","listItems","filter","includes","map","components_Item_Item","key","handleBlur","_this$state","replace","split","join","handleEditRecord","marked","cancelEdit","which","autoFocus","onBlur","onKeyUp","dangerouslySetInnerHTML","__html","edit","components_Toolbar_Toolbar","components_List_List","components_Editor_Editor","components_CompileItem_CompileItem","render","components_Layout_Layout","handleLoadStateFromLocalStorage","handleSaveToLocalStorage","mapDispatchToProps","payload","connect","editingRecords","store","createStore","ReactDOM","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a91c4bf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3_Sy9\",\"Button\":\"Toolbar_Button__bzbWD\",\"ButtonInner\":\"Toolbar_ButtonInner__1Buyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Search_Form__HWwpF\",\"Input\":\"Search_Input__6iwdW\",\"Button\":\"Search_Button__3G05N\",\"Clear\":\"Search_Clear__1d3AY\",\"Submit\":\"Search_Submit__lOJCt\",\"InputWrapper\":\"Search_InputWrapper__eGlwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__2-C3p\",\"ItemActive\":\"Item_ItemActive__2doUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3xERz\",\"Toolbar\":\"Layout_Toolbar__1myXt\",\"List\":\"Layout_List__1jYUz\",\"Content\":\"Layout_Content__lQM3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompileItem\":\"CompileItem_CompileItem__3d_J7\",\"Content\":\"CompileItem_Content__1UDwP\",\"Date\":\"CompileItem_Date__XwCq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__2VB9x\",\"Title\":\"List_Title__1FHGN\",\"Date\":\"List_Date__2deZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Editor\":\"Editor_Editor__3OeT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3_czo\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const LOAD_FROM_STORAGE = \"LOAD_FROM_STORAGE\";\n\nexport const loadStateFromLocalStorage = state => ({\n  type: LOAD_FROM_STORAGE,\n  payload: []\n})\n\n","export const CREATE_RECORD = \"CREATE_RECORD\"\n\nexport const createRecord = () => ({\n  type: CREATE_RECORD\n})\n","export const EDIT_RECORD = \"EDIT_RECORD\"\n\nexport const editRecord = record => ({\n  type: EDIT_RECORD,\n  record\n})\n","export const EDIT_COMPILE_ITEM = \"EDIT_COMPILE_ITEM\"\n\nexport const editCompileItem = (record) => ({\n  type: EDIT_COMPILE_ITEM,\n  record\n})\n","export const CHANGE_CURRENT_RECORD = \"CHANGE_CURRENT_RECORD\"\n\nexport const changeCurrentRecord = (record) => ({\n  type: CHANGE_CURRENT_RECORD,\n  record,\n})\n","export const SAVE_TO_LOCAL_STORAGE = \"SAVE_TO_LOCAL_STORAGE\";\n\nexport const saveToLocalStorage = () => ({\n  type: SAVE_TO_LOCAL_STORAGE\n})","export const DELETE_ITEM = \"DELETE_ITEM\";\n\nexport const deleteItem  = id => ({\n  type: DELETE_ITEM,\n  id\n})","export const SEARCH_ITEM = \"SEARCH_ITEM\"\n\nexport const searchItem = value => ({\n  type: SEARCH_ITEM,\n  value\n})","import uuid from 'uuid/v1';\n\nimport { TEST_HANDLE } from '../actions/testHandle';\nimport { LOAD_FROM_STORAGE } from '../actions/loadStateFromLocalStorage';\nimport { CREATE_RECORD } from '../actions/createRecord';\nimport { EDIT_RECORD } from '../actions/editRecord';\nimport { EDIT_COMPILE_ITEM } from '../actions/editCompileItem';\nimport { CHANGE_CURRENT_RECORD } from '../actions/changeCurrentRecord';\nimport { SAVE_TO_LOCAL_STORAGE } from '../actions/saveToLocalStorage';\nimport { DELETE_ITEM } from '../actions/deleteItem';\nimport { SEARCH_ITEM } from '../actions/searchItem';\n\nconst APP_NAME = \"DIARY\";\n\nconst INITIAL_STATE = {\n  records: [],\n  editItem: true,\n  searchItem: ''\n}\n\nexport function diaryReducer( state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case LOAD_FROM_STORAGE: {\n      const  fromStorage = JSON.parse(localStorage.getItem(APP_NAME));\n      if (fromStorage) {\n        return {\n          ...state,\n          ...fromStorage\n          \n        }  \n      }\n    }\n    case SAVE_TO_LOCAL_STORAGE: {\n      localStorage.setItem(APP_NAME, JSON.stringify(state))\n      return {\n        ...state\n      }\n    }\n    \n    case  CHANGE_CURRENT_RECORD: {\n      return {\n        ...state,\n        currentRecord: {...action.record}\n      }\n    }\n\n    case CREATE_RECORD: {\n      const id = uuid();\n      const newRecord = { id, \n        name: \"\", \n        content: \"\",\n        createdAt: \"\",\n        changeAt: \"\",\n        compileItem: \"\" };\n      let date = new Date();\n      const createdAt = date.toLocaleDateString() + \" \" + date.getHours() + \":\"+ date.getMinutes();\n      newRecord.createdAt = createdAt;\n      return {\n        ...state,\n        records: [...state.records, newRecord],\n        currentRecord: newRecord,\n        editItem: true,\n      }\n    }\n    case EDIT_COMPILE_ITEM: {\n      return {\n        ...state,\n        editItem: true,\n      }\n    }\n\n    case EDIT_RECORD: {\n      const record = action.record;\n      const { recordId } = record;\n      const _records = state.records;\n      let editRecord = _records.find( ({ id }) => id === state.currentRecord.id );\n      Object.assign(editRecord, record);\n      return {\n        ...state,\n        records: [..._records],\n        currentRecord: {...editRecord},\n        editItem: false\n\n      }\n    }\n    case DELETE_ITEM: {\n      let _records = [...state.records];\n      const deletedIndex = _records.findIndex( ({id}) => id === action.id );\n      _records.splice( deletedIndex, 1);\n      return {\n        ...state,\n        records: [..._records],\n        currentRecord: _records[deletedIndex - 1]\n      }\n    }\n    case SEARCH_ITEM: {\n      return {\n        ...state,\n        searchItem: action.value\n      }\n    }\n    default: {\n      return state\n    }\n  }\n} ","\nimport { combineReducers } from 'redux';\nimport { diaryReducer } from './diary';\n\nconst AppReducer = combineReducers({\n  diary: diaryReducer\n});\n\n\nexport default AppReducer","import React, { Component } from 'react';\n\nimport classes from './Search.module.css'\n\nclass Search extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      searchValue: '',\n    }\n  }\n  handleChange = e => {\n    this.setState({\n      searchValue: e.target.value\n    })\n  }\n  handleClear = e => {\n    this.setState({\n      searchValue: ''\n    })\n    this.props.handleSearchItemChange('')\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSearchItemChange(this.state.searchValue)\n  }\n  render() {\n    return (\n      <form\n        className={ classes.Form }\n        onSubmit={ this.handleSubmit }\n      >\n        <div className={ classes.InputWrapper }>\n          <button\n            className={ classes.Submit }\n            onClick={ this.handleSubmit }\n            type=\"submit\"\n          >\n            <span className=\"icon-search\" />\n          </button>\n          \n          <input \n          placeholder=\"Поиск\"\n          type=\"text\"\n          className={ classes.Input }\n          value={ this.state.searchValue }\n          onChange={ this.handleChange } />\n          \n          { this.state.searchValue ? \n          (<button\n            className={ classes.Clear }\n            type=\"button\"\n            onClick={ this.handleClear }\n          >\n            <span className=\"icon-clear\" />\n          </button>) \n          : null\n        }\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Search","import React, { Fragment } from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Search from '../Search/Search';\n\nconst canEditButtonGroup = props => (\n  <Fragment>\n    <button className={ classes.Button } onClick={ props.handleEditCompileItem }>\n        <div className={ classes.ButtonInner }>\n          <span className=\"icon-edit\" />\n        </div>\n      </button>\n      <button className={ classes.Button } onClick={ () => props.handleDeleteItem(props.currentRecord.id) }>\n        <div className={ classes.ButtonInner }>\n          <span className=\"icon-trash\" />\n        </div> \n      </button>\n    </Fragment>\n)\n\nconst Toolbar = (props) => (\n  <div className={ classes.Toolbar }>\n    <button className={ classes.Button } onClick={ props.handleCreateRecord }>\n      <div className={ classes.ButtonInner }>\n          <span className=\"icon-text\" />\n      </div>\n    </button>\n    { props.currentRecord ? canEditButtonGroup(props) : null }\n    <Search { ...props } />\n  </div>\n)\n\nexport default Toolbar;\n","import React from 'react';\nimport classes from \"./Item.module.css\"\n\nconst Item = props => {\n  const { name, createdAt, changeAt, id } = props.record;\n  let classItem = classes.Item;\n  if( id == props.currentRecord.id ) {\n    classItem += ' ' + classes.ItemActive;\n  }\n  return (\n    <div \n      className={ classItem }\n      onClick={ () => props.handleChangeCurrentRecord(props.record) }\n      onDoubleClick={ (record) => props.handleEditCompileItem(props.currentRecord) }\n    >\n      <div className={ classes.Title }>\n        { name }\n      </div>\n      <div className={ classes.Date } >\n        { createdAt }\n      </div>\n    </div>\n  )\n}\n\nexport default Item;","import React from 'react';\nimport classes from \"./List.module.css\";\nimport Item from '../Item/Item';\n\nconst List = props => {\n  let listItems = [...props.records].filter(({ compileItem }) => compileItem.includes(props.searchItem) )\n  return (\n    <div className={ classes.List }>\n        { listItems.map( record => (\n          <Item\n            key={ record.id }\n            record={ record }\n            currentRecord={ props.currentRecord }\n            handleChangeCurrentRecord={ props.handleChangeCurrentRecord }\n            handleEditCompileItem={ props.handleEditCompileItem }\n          />\n        )) }\n    </div>\n  );\n}\n\nexport default List;","import React, { Component, Fragment } from 'react';\nimport marked from 'marked';\n\nimport classes from './Editor.module.css'\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: this.props.currentRecord.content,\n      changeAt: this.props.currentRecord.changeAt,\n\n    }\n  }\n  handleChange = (e) => {\n    let date = new Date();\n    let changeAt = date.toLocaleDateString() + \" \" + date.getHours() + \":\" + date.getMinutes();\n    this.setState({\n      content: e.target.value,\n      changeAt\n    });\n  }\n  handleBlur = () => {\n    const { content, changeAt } = this.state;\n    let name = content.replace(/[#*]|(-{3})|(__)|(___)/g, '').split('');\n    if(name.length > 20) {\n      name.length = 20;\n      name = name.join('');\n      name += \"...\"\n    }\n    else {\n      name = name.join('');\n    }\n    this.props.handleEditRecord({\n      name,\n      compileItem: marked(content),\n      content,\n      changeAt\n    });\n  }\n  cancelEdit = e => {\n    e.which == 27 && (this.handleBlur())\n  }\n  \n  render() {\n    return (\n      <Fragment>\n        <textarea\n          className={classes.Editor}\n          autoFocus\n          value={ this.state.content }\n          onChange={ this.handleChange }\n          onBlur={ this.handleBlur }\n          onKeyUp={ this.cancelEdit }\n        />\n      </Fragment>\n    )\n  }\n}\n\nexport default Editor;","import React from 'react';\n\nimport classes from './CompileItem.module.css'\nconst CompileItem = props => (\n  props.currentRecord ? (\n  <div className={ classes.CompileItem } >\n    { props.currentRecord.changeAt ?\n      (<div  className={ classes.Date }>изменено: { props.currentRecord.changeAt }</div>) \n      : null \n    }\n    <div \n      className={ classes.Content }\n      dangerouslySetInnerHTML={ { __html: props.currentRecord.compileItem } } \n      onDoubleClick={ (record) => props.handleEditCompileItem(props.currentRecord) } />\n  </div>\n  )\n    : null\n)\n\nexport default CompileItem","import React  from 'react';\nimport Toolbar from '../Toolbar/Toolbar';\nimport List from '../List/List';\nimport Editor from '../Editor/Editor';\nimport CompileItem from '../CompileItem/CompileItem';\n\nimport classes from './Layout.module.css';\n\nconst Layout = (props) => {\n  let edit =  props.editItem && props.currentRecord;\n  return (\n    <div className={ classes.Layout } >\n      <div className={ classes.Toolbar }>\n        <Toolbar { ...props } />\n      </div>\n      <div className={ classes.List } >\n        <List { ...props } />\n      </div>\n      <div className={ classes.Content }>\n        { edit ?  <Editor {...props} /> : <CompileItem {...props} /> }\n      </div>\n    </div>\n  )\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './App.module.css';\nimport Layout from '../components/Layout/Layout';\nimport { loadStateFromLocalStorage } from '../actions/loadStateFromLocalStorage';\nimport { testHandle } from '../actions/testHandle';\nimport { createRecord } from '../actions/createRecord';\nimport { editRecord } from '../actions/editRecord';\nimport { editCompileItem } from '../actions/editCompileItem';\nimport { changeCurrentRecord } from '../actions/changeCurrentRecord';\nimport { saveToLocalStorage } from '../actions/saveToLocalStorage';\nimport { deleteItem } from '../actions/deleteItem';\nimport { searchItem } from '../actions/searchItem';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.handleLoadStateFromLocalStorage();\n  }\n  componentDidUpdate() {\n    this.props.handleSaveToLocalStorage();\n  }\n\n  handleCreateRecord = () => this.props.handleCreateRecord();\n  handleEditRecord = record => this.props.handleEditRecord(record);\n  handleEditCompileItem = record => this.props.handleEditCompileItem(record);\n  handleChangeCurrentRecord = record => this.props.handleChangeCurrentRecord(record);\n  handleDeleteItem = id =>  id && (this.props.handleDeleteItem(id));\n  handleSearchItemChange = value => this.props.handleSearchItemChange(value);\n  \n\n\n  render = () => <Layout { ...this.props } />\n}\n\nconst mapStateToProps = state => ({\n  records: state.diary.records,\n  editingRecords: state.diary.editingRecords,\n  currentRecord: state.diary.currentRecord,\n  editItem: state.diary.editItem,\n  searchItem: state.diary.searchItem\n})\n\nconst mapDispatchToProps = {\n  handleLoadStateFromLocalStorage: loadStateFromLocalStorage,\n  handleCreateRecord: createRecord,\n  handleEditRecord: editRecord,\n  handleEditCompileItem: editCompileItem,\n  handleChangeCurrentRecord: changeCurrentRecord,\n  handleSaveToLocalStorage: saveToLocalStorage,\n  handleDeleteItem: deleteItem,\n  handleSearchItemChange: searchItem\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport AppReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\n\nimport './variables.css';\nimport 'normalize.css';\nimport './icons.css';\nimport './index.css';\n\nconst store = createStore(AppReducer)\n\nReactDOM.render(\n<Provider store={ store }>\n  <App />\n</Provider>,\ndocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}